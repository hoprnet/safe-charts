---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "safe-transaction.fullname" . }}-contracts
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "safe-transaction.labels" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- .Values.commonLabels | toYaml | nindent 4 }}
    {{- end }}
{{- if .Values.commonAnnotations }}
  annotations:
    {{- .Values.commonAnnotations | toYaml | nindent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicas.contracts }}
  strategy:
    type: {{ .Values.strategy }}
  selector:
    matchLabels:
      app.kubernetes.io/component: contracts
      app.kubernetes.io/instance: {{ include "safe-transaction.name" . }}
      app.kubernetes.io/name: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: contracts
        app.kubernetes.io/instance: {{ include "safe-transaction.name" . }}
        app.kubernetes.io/name: {{ .Release.Name }}
    spec:
      containers:
      - name: contracts
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: [ docker/web/celery/worker/run.sh ]
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
          capabilities:
            drop:
            - ALL
        resources: {{- toYaml .Values.resources.contracts | nindent 10 }}
        env:
          - name: DB_MAX_CONNS
            value: "{{ .Values.config.contracts.db_max_conns }}"
          - name: WORKER_MAX_MEMORY_PER_CHILD
            value: "{{ .Values.config.contracts.worker_max_memory }}"
          - name: CELERYD_CONCURRENCY
            value: "{{ .Values.config.contracts.worker_count }}"
          - name: RUN_MIGRATIONS
            value: "0"
          - name: WORKER_QUEUES
            value: contracts,tokens
        envFrom:
          - configMapRef:
              name: {{ include "safe-transaction.fullname" . }}
          - secretRef:
              {{- if .Values.config.secretReferenceKey }}
              name: {{ .Values.config.secretReferenceKey }}
              {{- else }}
              name: {{ include "safe-transaction.fullname" . }}
              {{- end }}
          - secretRef:
              name: {{ include "safe-transaction.postgres-secret" . }}
          - secretRef:
              name: {{ include "safe-transaction.redis-secret" . }}
          - secretRef:
              name: {{ include "safe-transaction.rabbitmq-secret" . }}
        volumeMounts:
          - name: tmp-volume
            mountPath: /tmp
          - name: media-content
            mountPath: /app/safe_transaction_service/media
      serviceAccountName: {{ include "safe-transaction.fullname" . }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: media-content
          persistentVolumeClaim:
            claimName: {{ include "safe-transaction.fullname" . }}-media
      securityContext:
        fsGroup: 999

